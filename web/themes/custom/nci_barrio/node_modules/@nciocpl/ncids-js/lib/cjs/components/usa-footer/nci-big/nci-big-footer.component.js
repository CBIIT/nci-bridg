"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.NCIBigFooter = void 0;
const footer_collapse_1 = require("../utils/footer-collapse");
const footer_back_to_top_1 = require("../utils/footer-back-to-top");
const nci_subscribe_component_1 = require("../../nci-subscribe/nci-subscribe.component");
class NCIBigFooter {
    constructor(element, options) {
        this.collapses = [];
        this.resizeEventListener = (e) => this.handleResize(e);
        this.element = element;
        this.options = Object.assign(Object.assign({}, NCIBigFooter.optionDefaults), options);
        this.collapseMediaQuery = matchMedia(`(min-width: ${this.options.collapseWidth}px)`);
        const existingComponent = NCIBigFooter._components.get(this.element);
        if (existingComponent) {
            existingComponent.unregister();
        }
        NCIBigFooter._components.set(this.element, this);
        this.initialize();
    }
    static create(element, options) {
        if (!(element instanceof HTMLElement)) {
            throw 'Element is not an HTMLElement';
        }
        return this._components.get(element) || new this(element, options);
    }
    static autoInit() {
        document.addEventListener('DOMContentLoaded', () => {
            const footers = Array.from(document.getElementsByClassName('usa-footer'));
            footers.forEach((footer) => {
                this.create(footer);
            });
        });
    }
    unregister() {
        if (this.form) {
            this.form.unregister();
            this.form = undefined;
        }
        if (this.backToTop) {
            this.backToTop.unregister();
            this.backToTop = undefined;
        }
        this.unregisterCollapses();
        this.removeEventListeners();
        NCIBigFooter._components.delete(this.element);
    }
    unregisterCollapses() {
        this.collapses.forEach((collapse) => {
            collapse.unregister();
        });
        this.collapses = [];
    }
    initialize() {
        this.createSubscribe();
        this.addEventListeners();
        this.createBackToTop();
        const currentWidth = window.innerWidth;
        const collapseWidth = this.options.collapseWidth;
        if (currentWidth < collapseWidth) {
            this.createCollapsibleSections();
        }
    }
    handleResize(query) {
        if (query.matches) {
            this.unregisterCollapses();
        }
        else {
            this.createCollapsibleSections();
        }
    }
    createCollapsibleSections() {
        const collapses = this.queryCollapsibleSections();
        collapses.forEach((collapse, index) => {
            this.collapses[index] = new footer_collapse_1.FooterCollapse(collapse, this.options);
        });
    }
    queryCollapsibleSections() {
        const selector = '.usa-footer__primary-content--collapsible';
        return Array.from(this.element.querySelectorAll(selector));
    }
    createSubscribe() {
        const form = this.element.querySelector('form');
        if (form) {
            this.form = nci_subscribe_component_1.NCISubscribe.create(form, this.options);
        }
    }
    createBackToTop() {
        const linkElement = this.element.getElementsByClassName('usa-footer__return-to-top')[0];
        if (linkElement) {
            this.backToTop = new footer_back_to_top_1.NCIBackToTop(linkElement);
        }
    }
    addEventListeners() {
        this.collapseMediaQuery.addEventListener('change', this.resizeEventListener);
    }
    removeEventListeners() {
        this.collapseMediaQuery.removeEventListener('change', this.resizeEventListener);
    }
}
exports.NCIBigFooter = NCIBigFooter;
NCIBigFooter.optionDefaults = {
    collapseButtonClass: 'usa-footer__primary-link',
    collapseClass: 'usa-footer__primary-content--collapsible',
    collapseWidth: 480,
    collapseEventListenerLabel: 'usa-footer:nav-links',
    subscribeInvalidEmailAlert: 'Enter a valid email address',
    subscribeEventListenerLabel: 'usa-footer:sign-up',
};
NCIBigFooter._components = new Map();
